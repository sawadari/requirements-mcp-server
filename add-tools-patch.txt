  private changeSets: Map<string, ChangeSet> = new Map();
  private currentPolicy: FixPolicy | null = null;
+  private validationTools: ValidationTools | null = null;
+  private batchTools: BatchTools;

  constructor() {
    this.storage = new RequirementsStorage('./data');
    this.analyzer = new ImpactAnalyzer(this.storage);
    this.viewExporter = new ViewExporter(this.storage);
    this.logger = new OperationLogger('./data');
    this.validator = new RequirementValidator(this.storage);
    this.changeEngine = new ChangeEngine();
+    this.batchTools = new BatchTools(this.storage);

    // ValidationEngineを非同期で初期化
    ValidationEngine.create().then(engine => {
      this.validationEngine = engine;
+      this.validationTools = new ValidationTools(this.storage, engine);
      logger.info('ValidationEngine initialized');
    }).catch(error => {
      logger.error('Failed to initialize ValidationEngine', error);

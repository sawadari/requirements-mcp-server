name: Miyabi Health Check

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # ÊØéÊó•ÂçàÂâç9ÊôÇ(UTC)„Å´ÂÆüË°å
    - cron: '0 9 * * *'
  workflow_dispatch:

jobs:
  health-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Miyabi
        run: npm install -g miyabi@latest

      - name: Run Miyabi Doctor
        id: doctor
        run: |
          echo "Running Miyabi health check..."
          RESULT=$(npx miyabi doctor --json)
          echo "$RESULT"

          # JSONÁµêÊûú„ÇíËß£Êûê
          STATUS=$(echo "$RESULT" | jq -r '.overallStatus')
          PASSED=$(echo "$RESULT" | jq -r '.summary.passed')
          FAILED=$(echo "$RESULT" | jq -r '.summary.failed')
          WARNED=$(echo "$RESULT" | jq -r '.summary.warned')

          echo "status=$STATUS" >> $GITHUB_OUTPUT
          echo "passed=$PASSED" >> $GITHUB_OUTPUT
          echo "failed=$FAILED" >> $GITHUB_OUTPUT
          echo "warned=$WARNED" >> $GITHUB_OUTPUT

          # ÁµêÊûú„Çí„Éï„Ç°„Ç§„É´„Å´‰øùÂ≠ò
          echo "$RESULT" > health-check-result.json
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload health check results
        uses: actions/upload-artifact@v4
        with:
          name: health-check-results
          path: health-check-result.json
          retention-days: 30

      - name: Create Issue on failure
        if: steps.doctor.outputs.status == 'critical'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const result = JSON.parse(fs.readFileSync('health-check-result.json', 'utf8'));

            const failedChecks = result.checks
              .filter(c => c.status === 'fail')
              .map(c => `- **${c.name}**: ${c.message}\n  ${c.suggestion || ''}`)
              .join('\n');

            const issueBody = `## üö® Miyabi Health Check Failed

**Status**: ${result.overallStatus}
**Date**: ${new Date().toISOString()}

### Summary
- ‚úÖ Passed: ${result.summary.passed}
- ‚ö†Ô∏è Warned: ${result.summary.warned}
- ‚ùå Failed: ${result.summary.failed}

### Failed Checks
${failedChecks}

### Action Required
Please review and fix the failed checks above.

---
*This issue was automatically created by the Miyabi Health Check workflow.*`;

            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: '‚ö†Ô∏è health-check-failed',
            });

            if (issues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'üö® Miyabi Health Check Failed',
                body: issueBody,
                labels: ['‚ö†Ô∏è health-check-failed', 'priority:P1-High', 'type:bug'],
              });
            } else {
              // Êó¢Â≠ò„ÅÆIssue„Å´„Ç≥„É°„É≥„Éà
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issues.data[0].number,
                body: `### Health Check Failed Again\n\n${issueBody}`,
              });
            }

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const result = JSON.parse(fs.readFileSync('health-check-result.json', 'utf8'));

            const status = result.overallStatus === 'healthy' ? '‚úÖ' :
                           result.overallStatus === 'warning' ? '‚ö†Ô∏è' : '‚ùå';

            const body = `## ${status} Miyabi Health Check

**Status**: ${result.overallStatus}
**Passed**: ${result.summary.passed}/${result.summary.total}
**Failed**: ${result.summary.failed}
**Warned**: ${result.summary.warned}

<details>
<summary>View Details</summary>

\`\`\`json
${JSON.stringify(result, null, 2)}
\`\`\`

</details>`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body,
            });

      - name: Fail job if critical
        if: steps.doctor.outputs.status == 'critical'
        run: |
          echo "‚ùå Health check failed with critical status"
          echo "Failed checks: ${{ steps.doctor.outputs.failed }}"
          exit 1
